import random

import rooms
from alice_sdk import *

schoolPhotoId = "1652229/bad8c0c5414c0417c80d"

YesAnswers = ["–¥–∞", "–∫–æ–Ω–µ—á–Ω–æ", "–∞–≥–∞", "—Å–æ–≥–ª–∞—Å–µ–Ω", "–ø—Ä–∏—Å—Ç—É–ø–∏–º", "–Ω–∞—á–Ω–µ–º", "–ø—Ä–æ–¥–æ–ª–∂–∏–º", "–æ–∫", "–ø–æ–µ—Ö–∞–ª–∏", "–Ω–∞—á–Ω—ë–º"]
NoAnswers = ["–Ω–µ—Ç", "–æ—Ç–∫–∞–∂—É—Å—å", "–Ω–µ–∞", "–Ω–µ —Ö–æ—á—É"]
EndAnswers = ["–•–≤–∞—Ç–∏—Ç", "–≤—ã—Ö–æ–¥", "–∑–∞–∫–æ–Ω—á–∏—Ç—å", "–ó–∞–∫–æ–Ω—á–∏—Ç—å", "–í—ã—Ö–æ–¥", "–û—Å—Ç–∞–Ω–æ–≤–∏—Å—å", "–æ—Å—Ç–∞–Ω–æ–≤–∏—Å—å"]

GoodPhrases = ['–ú–æ–ª–æ–¥—á–∏–Ω–∞!üíØ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ.', '–¢—ã –Ω–∞—Å—Ç–æ—è—â–∏–π –ú–µ–≥–∞–º–æ–∑–≥ü§ì', '–ú–æ–ª–æ–¥–µ—Ü!üéâ –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å!',
               '–¢—ã —â—ë–ª–∫–∞–µ—à—å –∑–∞–¥–∞—á–∫–∏, –∫–∞–∫ –æ—Ä–µ—à–∫–∏. –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è!']
BadPhrases = ['–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.', '–¢—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–π!',
              '–¢–≤–æ–π –æ—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π. –°–∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∏—Ä—É–π—Å—è –Ω–∞ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏.',
              '–≠—Ö. –¢—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ù–µ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞–π—Å—è –∏ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è.']

EndPhrases = ["–ü—Ä–∏—è—Ç–Ω–æ –±—ã–ª–æ –ø–æ—Ä–∞–±–æ—Ç–∞—Ç—å. –î–æ –≤—Å—Ç—Ä–µ—á–∏!", "–£–¥–∞—á–∏ –≤ –∏–∑—É—á–µ–Ω–∏–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. –ü–æ–∫–∞!",
              "–ñ–µ–ª–∞—é —Ç–µ–±–µ —Ö–æ—Ä–æ—à–∏—Ö –æ—Ü–µ–Ω–æ–∫ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –∏ –≤—Å–µ–≥–æ –Ω–∞–∏–ª—É—á—à–µ–≥–æ! –î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á!"]

HelpPhrases = ["–°–µ–π—á–∞—Å —Ç–µ–±–µ –Ω–∞–¥–æ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É. –ü–æ—Å—Ç–∞—Ä–∞–π—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –≤–¥—É–º–∞—Ç—å—Å—è –≤ –µ—ë —É—Å–ª–æ–≤–∏–µ. –£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—å—Å—è!üòÄ."
               " –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –Ω–∞–≤—ã–∫–∞, –Ω–∞–ø–∏—à–∏ '–ó–∞–∫–æ–Ω—á–∏—Ç—å'", "–ü–µ—Ä–µ–¥ —Ç–æ–±–æ–π –µ—Å—Ç—å –∑–∞–¥–∞—á–∞."
               " –í—Å–ø–æ–º–Ω–∏ –≤—Å—ë, —á—Ç–æ —Ç—ã –ø—Ä–æ—Ö–æ–¥–∏–ª –Ω–∞ —É—Ä–æ–∫–∞—Ö –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏,"
               " —Å–æ–±–µ—Ä–∏—Å—å –∏ —Ä–µ—à–∏ –µ—ë. –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –Ω–∞–≤—ã–∫–∞, –Ω–∞–ø–∏—à–∏ '–ó–∞–∫–æ–Ω—á–∏—Ç—å'",
               "–ó–∞–¥–∞—á–∞, –∫–æ—Ç–æ—Ä—É—é —Ç–µ–±–µ –Ω–∞–¥–æ —Ä–µ—à–∏—Ç—å, –ø–æ–¥ —Å–∏–ª–∞–º –≤—Å–µ–º."
               " –°–∞–º–æ–µ –≥–ª–∞–≤–Ω–æ–µ - —ç—Ç–æ —Å–æ—Å—Ä–µ–¥–æ—Ç–æ—á–∏—Ç—å—Å—è, –≤–¥—É–º–∞—Ç—å—Å—è –∏, —Å–æ–±—Ä–∞–≤ –≤—Å–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è, —Ä–µ—à–∏—Ç—å –µ—ë."
               " –£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—å—Å—èüí™. –ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –Ω–∞–≤—ã–∫–∞, –Ω–∞–ø–∏—à–∏ '–ó–∞–∫–æ–Ω—á–∏—Ç—å'"]
WhatYouCan = ["–í –º–æ—é –æ—Å–Ω–æ–≤–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –≤—Ö–æ–¥–∏—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ 9-—Ç–∏ –∫–ª–∞—Å—Å–Ω–∏–∫–æ–≤ –∫ –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –Ω–∞ –ª—É—á—à–∏–µ –æ—Ü–µ–Ω–∫–∏üíØ",
              "–ú–Ω–µ –ø–æ–¥ —Å–∏–ª—É –ø—Ä–∏–¥—É–º—ã–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –Ω–∞ –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µüß†."
              " –ë–ª–∞–≥–æ–¥–∞—Ä—è –º–Ω–µ 9-—Ç–∏ –∫–ª–∞—Å—Å–Ω–∏–∫–∏ —Å–º–æ–≥—É—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —ç–∫–∑–∞–º–µ–Ω—É –Ω–∞ –∂–µ–ª–∞–µ–º—É—é –æ—Ç–º–µ—Ç–∫—Éüí•",
              "–Ø —É–º–µ—é –¥–∞–≤–∞—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∫–∏ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ,"
              " —á—Ç–æ–±—ã 9-—Ç–∏ –∫–ª–∞—Å—Å–Ω–∏–∫–∏ —Å—É–º–µ–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –û–ì–≠ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ –Ω–∞ –Ω–∞–∏–≤—ã—Å—à–∏–µ –±–∞–ª–ª—ãüíØ"]

#–¢—É—Ç –∑–∞–¥–∞–Ω—ã –≤–∞—Ä–∏–∞–Ω—Ç—ã –∫–æ–º–Ω–∞—Ç, –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è –∏ —Ñ—É–Ω–∫—Ü–∏–∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∏–º.
rooms_variants = {
    "–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π": ["–¢–µ–±–µ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–µ—à–∏—Ç—å –ø—Ä–æ—Å—Ç–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –∏ —Å–∫–∞–∑–∞—Ç—å –æ—Ç–≤–µ—Ç –≤ —Ü–µ–ª—ã—Ö —á–∏—Å–ª–∞—Ö "
                                  "(–æ–∫—Ä—É–≥–ª—è—è –¥—Ä–æ–±–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞)."
                                  " –í—ã—Ä–∞–∂–µ–Ω–∏–µ: ", rooms.simpleExpressionGenerator],
    "–†–µ—à–µ–Ω–∏–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π": ["–ó–¥–µ—Å—å —Ç–µ–±–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –∫–æ—Ä–µ–Ω—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —É—Ä–∞–≤–Ω–µ–Ω–∏—è. –ï—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ, "
                                     "–∑–∞–ø–∏—à–∏ –∫–æ—Ä–Ω–∏ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è, —Ä–∞–∑–¥–µ–ª—è—è –∏—Ö —Ç–æ—á–∫–æ–π —Å –∑–∞–ø—è—Ç–æ–π. "
                                     "–ö–æ—Ä–Ω–∏ –æ–∫—Ä—É–≥–ª–∏ –¥–æ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª. –£—Ä–∞–≤–Ω–µ–Ω–∏–µ: ",
                                     rooms.quadraticEquationGenerator],
    "–ü–æ–∏—Å–∫ —Ä–µ—à–µ–Ω–∏–µ –∫ –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤—É": ["–†–µ—à–µ–Ω–∏–µ –∫–∞–∫–æ–≥–æ –∏–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —Ä–∏—Å—É–Ω–∫–µ", rooms.Unequation],
    "–†–µ—à–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π": ["–ù–∞–π–¥–∏—Ç–µ X –∏ Y —Å–∏—Å—Ç–µ–º—ã —É—Ä–∞–≤–Ω–µ–Ω–∏–π", rooms.EquationSystem],
    "–†–µ—à–µ–Ω–∏–µ –ª–∏–Ω–µ–π–Ω—ã—Ö —É—Ä–∞–≤–Ω–µ–Ω–∏–π": ["–ù–∞–π–¥–∏—Ç–µ –∫–æ—Ä–µ–Ω—å —É—Ä–∞–≤–Ω–µ–Ω–∏—è", rooms.EquationSystem]
}


def handler(event, context):
    req = AliceRequest(event)

    resp = AliceResponse(req)

    if req.is_new_session:
        answers = ['–ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –≤ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ. '
                   '–ï—Å–ª–∏ –∂–µ–ª–∞–µ—à—å –∑–∞–∫–æ–Ω—á–∏—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É, —Å–∫–∞–∂–∏ "–ó–∞–∫–æ–Ω—á–∏—Ç—å". –ü—Ä–∏—Å—Ç—É–ø–∏–º?']
        resp.set_text(answers[0])
        resp.set_session_state({"stage": 1})
        resp.set_buttons([{"title": "–ü–æ–µ—Ö–∞–ª–∏!", "hide": True}, {"title": "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "hide": True},
                          {"title": "–ü–æ–º–æ—â—å", "hide": True}])

        return resp.dictionary

    if any(y in req.command.lower() for y in EndAnswers):
        resp.set_text(random.choice(EndPhrases))
        resp.end()
        return resp.dictionary

    if req.session_state["stage"] == 1:

        if req.command.lower() == "—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å":
            resp.set_text(random.choice(WhatYouCan))
            resp.set_session_state({"stage": 1})
            resp.set_buttons([{"title": "–ü–æ–µ—Ö–∞–ª–∏!", "hide": True}, {"title": "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "hide": True},
                              {"title": "–ü–æ–º–æ—â—å", "hide": True}])

            return resp.dictionary

        if (x in req.command.lower() for x in YesAnswers):
            resp.set_text(
                "–¢—ã –æ–∫–∞–∑—ã–≤–∞–µ—à—å—Å—è –æ–¥–∏–Ω –≤ –∑–∞–∫—Ä—ã—Ç–æ–π —à–∫–æ–ª–µ."
                " –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å—Å—è, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π."
                " –í –ø–æ–π–¥–µ—à—å –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ?")

            resp.bigcard(schoolPhotoId, "–¢—ã –æ–∫–∞–∑—ã–≤–∞–µ—à—å—Å—è –æ–¥–∏–Ω –≤ –∑–∞–∫—Ä—ã—Ç–æ–π —à–∫–æ–ª–µ. ",
                         "–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å—Å—è, —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –ø–æ –∫–æ–º–Ω–∞—Ç–∞–º –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞–¥–∞–Ω–∏–π."
                         " –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ —Ç–µ–±–µ –ø—Ä–µ–¥—Å—Ç–æ–∏—Ç –≤—ã–±–∏—Ä–∞—Ç—å: –∏–¥—Ç–∏ –ª–∏–±–æ –≤–ª–µ–≤–æ, –ª–∏–±–æ –≤–ø—Ä–∞–≤–æ."
                         " –ü–æ–π–¥–µ—à—å –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ?"
                         " \n–§–æ—Ç–æ –≤–∑—è—Ç–æ —Å —Å–∞–π—Ç–∞: https://klike.net/1903-shkola-krasivye-kartinki-40-foto.html")

            resp.set_session_state({"stage": 2, "leftRight": True, "think": False, "score": 0})
            resp.set_buttons([{"title": "–í–ª–µ–≤–æ", "hide": True}, {"title": "–í—ã—Ö–æ–¥", "hide": True},
                              {"title": "–í–ø—Ä–∞–≤–æ", "hide": True}])
            return resp.dictionary
        elif (x in req.command.lower() for x in NoAnswers):
            resp.set_text(random.choice(["–•–æ—Ä–æ—à–æ. –î–æ —Å–∫–æ—Ä—ã—Ö –≤—Å—Ç—Ä–µ—á!", "–•–æ—Ä–æ—à–æ. –ñ–¥—É —Ç–µ–±—è –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑",
                                         "–ö–∞–∫ —Å–∫–∞–∂–µ—à—å. –£–≤–∏–¥–∏–º—Å—è –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑",
                                         "–•–æ—Ä–æ—à–æ. –ö–∞–∫ –ø–µ—Ä–µ–¥—É–º–∞–µ—à—å, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–π—Å—è"]))
            resp.end()
            return resp.dictionary
        else:
            resp.set_text(random.choice(["–ù—É —Ç–∞–∫ –ø—Ä–∏c—Ç—É–ø–∏–º?", "–¢—ã —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å?", "–°–∫–∞–∂–∏, —Ç—ã –≥–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É?"]))
            resp.set_session_state({"stage": 1})
            return resp.dictionary

    if req.session_state["stage"] >= 12:
        if req.session_state["score"] >= 5:
            resp.set_text(
                f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã –Ω–∞–∫–æ–Ω–µ—Ü-—Ç–æ –≤—ã–±—Ä–∞–ª—Å—è –∏–∑ –∑–∞–∫—Ä—ã—Ç–æ–π —à–∫–æ–ª—ã. –¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {req.session_state['score']}"
                f" –∏–∑ 10 –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à—ë–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π")
            resp.end()
        else:
            resp.set_text(
                f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é —Ç—ã –æ—Å—Ç–∞–µ—à—å—Å—è –≤ —à–∫–æ–ª–µ. –¢—ã –±—É–¥–µ—à—å —Ä–µ—à–∞—Ç—å –∑–∞–¥–∞–Ω–∏—è –¥–æ —Ç–µ—Ö –ø–æ—Ä, –ø–æ–∫–∞ –Ω–µ —Ä–µ—à–∏—à—å –≤–µ—Ä–Ω–æ.")
            resp.set_session_state({"stage": 1, "leftRight": False, "think": False, "score": 0})
            resp.set_buttons([{"title": "–ü—Ä–æ–¥–æ–ª–∂–∏–º", "hide": True}, {"title": "–í—ã—Ö–æ–¥", "hide": True}])
        return resp.dictionary

    if req.session_state["stage"] > 1:
        if req.session_state["leftRight"]:
            try:
                if req.command.lower() in ("–≤–ø—Ä–∞–≤–æ", "–≤–ª–µ–≤–æ"):
                    name = random.choice(list(rooms_variants.keys()))
                    values = rooms_variants[name]
                    description = values[0]
                    fun = values[1]
                    exp, result = fun()

                    resp.set_text(f"{random.choice(['–ß—É–¥–µ—Å–Ω–æ', '–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ', '–•–æ—Ä–æ—à–æ'])},"
                                  f" —Ç—ã –æ–∫–∞–∑–∞–ª—Å—è –≤ –∫–æ–º–Ω–∞—Ç–µ –ø–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{name}'. {description}{exp}")
                    resp.set_session_state(
                        {"stage": req.session_state["stage"], "leftRight": False, "think": True, "waitedResult": result,
                         "score": req.session_state["score"]})
                    resp.set_buttons([{"title": "–ü–æ–º–æ—â—å", "hide": True},
                                      {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                      {"title": "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "hide": True}])
                else:
                    resp.set_session_state(req.session_state)
                    resp.set_text(random.choice(["–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ",
                                                 "–í—ã–±–µ—Ä–∏, –∏–¥—Ç–∏ –ª–∏–±–æ –≤ –ø—Ä–∞–≤—É—é –∫–æ–º–Ω–∞—Ç—É, –ª–∏–±–æ –≤ –ª–µ–≤—É—é",
                                                 "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å —á—ë—Ç–∫–æ, –≤–ø—Ä–∞–≤–æ –∏–ª–∏ –≤–ª–µ–≤–æ"]))
                    resp.set_buttons([{"title": "–í–ª–µ–≤–æ", "hide": True}, {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                     {"title": "–í–ø—Ä–∞–≤–æ", "hide": True}])

            except Exception as e:
                resp.set_text(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
                resp.end()
                return resp.dictionary

        if req.session_state["think"]:
            if req.command.lower() == "–ø–æ–º–æ—â—å":
                resp.set_text(random.choice(HelpPhrases))
                resp.set_session_state(req.session_state)
                resp.set_buttons([{"title": "–ü–æ–º–æ—â—å", "hide": True},
                                  {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                  {"title": "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "hide": True}])
                return resp.dictionary

            try:
                res = list(map(int, req.original_utterance.replace(" ", "").split(";")))

            except:
                resp.set_session_state(req.session_state)
                resp.set_text(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏ –∫–æ—Ä–µ–Ω—å —É—Ä–∞–≤–Ω–µ–Ω–∏—è, –µ—Å–ª–∏ –æ–Ω –æ–¥–∏–Ω. –ï—Å–ª–∏ –∫–æ—Ä–Ω–µ–π —É—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ—Å–∫–æ–ª—å–∫–æ,"
                              f" —Ç–æ –æ–∫—Ä—É–≥–ª–∏ –∏—Ö –¥–æ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –∏ –∑–∞–ø–∏—à–∏ –∏—Ö –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è, —Ä–∞–∑–¥–µ–ª–∏–≤ –∏—Ö –∑–Ω–∞–∫–æ–º ;.")

                resp.set_buttons([{"title": "–ü–æ–º–æ—â—å", "hide": True},
                                  {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                  {"title": "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", "hide": True}])
                return resp.dictionary
            if sorted(req.session_state["waitedResult"]) == res:
                resp.set_text(random.choice(GoodPhrases))
                resp.set_session_state({"stage": req.session_state["stage"] + 1, "leftRight": True, "think": False,
                                        "score": req.session_state["score"] + 1})
                resp.set_buttons([{"title": "–í–ª–µ–≤–æ", "hide": True}, {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                  {"title": "–í–ø—Ä–∞–≤–æ", "hide": True}])

            else:
                waited = req.session_state['waitedResult']

                if len(waited) == 1:
                    text = str(waited[0])
                else:
                    text = ';'.join(map(str, waited))
                resp.set_text(random.choice(BadPhrases) + f" –û—Ç–≤–µ—Ç: {text}")
                resp.set_session_state({"stage": req.session_state["stage"] + 1, "leftRight": True, "think": False,
                                        "score": req.session_state["score"]})
                resp.set_buttons([{"title": "–í–ª–µ–≤–æ", "hide": True}, {"title": "–í—ã—Ö–æ–¥", "hide": True},
                                  {"title": "–í–ø—Ä–∞–≤–æ", "hide": True}])

    return resp.dictionary
